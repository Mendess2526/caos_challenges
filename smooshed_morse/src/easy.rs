use std::io::{stdin, Read};

const TABLE: [&str; 123] = [
    "", "", "", "", "", "", "", "", "", "", "\n", "", "", "", "", "", "", "", "", "", "", "", "",
    "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
    "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
    "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
    "", "", ".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", ".---", "-.-", ".-..",
    "--", "-.", "---", ".--.", "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--",
    "--..",
];

#[inline]
fn symbol(byte: u8) -> &'static str {
    TABLE[usize::from(byte.to_ascii_lowercase())]
}

fn main() -> std::io::Result<()> {
    let mut buf = Vec::new();
    stdin().lock().read_to_end(&mut buf)?;
    print!("{}", buf.iter().map(|c| symbol(*c)).collect::<String>());
    Ok(())
}
